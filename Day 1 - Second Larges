Day 1. Second Largest ðŸ§ 

Difficulty: EasyAccuracy: 26.72%Submissions: 1.1MPoints: 2Average Time: 15m
Given an array of positive integers arr[], return the second largest element from the array. If the second largest element doesn't exist then return -1.

Note: The second largest element should not be equal to the largest element.

Examples:

Input: arr[] = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr[] = [10, 5, 10]
Output: 5
Explanation: The largest element of the array is 10 and the second largest element is 5.
Input: arr[] = [10, 10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist.
Constraints:
2 â‰¤ arr.size() â‰¤ 105
1 â‰¤ arr[i] â‰¤ 105

solution 
----java------

// User function Template for Java

class Solution {
    public int getSecondLargest(int[] arr) {
        // Code Here
        int mx = Integer.MIN_VALUE;
        int smx = Integer.MIN_VALUE;
        
        for(int i : arr) {
            mx = Math.max(mx, i);
        }
        
        for (int i : arr) {
            if (i > smx && i != mx) {
                smx = i;
            }
        }
        return smx == Integer.MIN_VALUE ? -1 : smx;
    }
}



----c++---

class Solution {
public:
    int getSecondLargest(const std::vector<int>& arr) {
        int first = INT_MIN, second = INT_MIN;

        for (int num : arr) {
            if (num > first) {
                second = first;
                first = num;
            } else if (num > second && num < first) {
                second = num;
            }
        }

        return second == INT_MIN ? -1 : second;
    }
};
